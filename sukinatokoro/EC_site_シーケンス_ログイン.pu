@startuml シーケンス_ログイン

' 登場人物の定義
' 書いた順番に左から右へ配置される
' 最も左側に配置するのはactor
' 左側にはboundary,右側にはentityを配置するのが一般的
' actorは人、boundaryはシステムの画面、entityはデータベースを表す
' controlはシステムの処理(プログラムファイル)を表す
' ロバストネスからcontrolを作る時は矢印が一本のコントローラはシーケンス図では登場させない
' 矢印が二本以上のコントローラのみ登場させる
' controlの名称は「処理」や「表示」などの動詞にする
actor ユーザー          as User
boundary "ログイン画面" as b1
control "表示"         as c1
control "処理"         as c2
entity "ユーザー情報"   as e1
boundary "トップ画面"   as b2

' シーケンスの流れ
' 矢印の上には必ずメッセージを書く
' 破線の矢印（戻り値）にはメッセージを書かない
c1   -> b1: ログイン画面を表示する
User -> b1: ログインボタンを押下する
' boundaryからの矢印にはメッセージの後に「:method = POST()」or「:method = GET()」などの補足情報を書く
' POSTはデータを送信する、GETはデータを取得する
b1   -> c2: 起動する:method = POST()
alt 「ID」が無記入の場合
    c2 -> b1 : 「IDが入力されていません」と\n赤文字でメッセージを表示する

else 「Pass」が無記入の場合
    c2 -> b1 : 「Passが入力されていません」と\n赤文字でメッセージを表示する

else 「ID」「Pass」が無記入ではない場合
    ' 分岐を書く場合は必ず「～でない場合」を書く
    c2 ->  e1 : 参照する
    c2 <-- e1 
    alt 「ID」が正しくない場合
        c2 -> b1 : 「IDもしくはパスワードが正しくありません」と\n赤文字でメッセージを表示する
    else 「Pass」が正しくない場合
        c2 -> b1 : 「IDもしくはパスワードが正しくありません」と\n赤文字でメッセージを表示する
    else 「ID」「Pass」が正しい場合
        c2 -> b2 : トップ画面を表示する
    end
end

@enduml